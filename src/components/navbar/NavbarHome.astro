---
import NavLink from "./NavLink.astro";
import NavLogo from "./NavLogo.astro";
import NavbarMobile from "./NavbarMobile.astro";

import NavMobileToggle from "../buttons/NavMobileToggle.astro";

interface Props {
    selectedItem: "home";
}
const { selectedItem } = Astro.props;

const stickyNavMobileId = "sticky-nav-mobile";
const fixedNavMobileId = "fixed-nav-mobile";
---

<>
    <header
        id="sticky-header"
        class="group sticking:translate-y-0 sticking:duration-200 fixed top-0 left-0 z-40 grid w-full -translate-y-96 place-items-center bg-white p-8 py-4 transition-all">
        <NavMobileToggle
            id="sticky-nav-mobile-toggle"
            navMobileId={stickyNavMobileId}
            theme="dark"
        />
        <nav>
            <ul
                class="flex flex-row items-center justify-center gap-4 text-sm leading-5 font-medium tracking-widest text-black uppercase">
                <li>
                    <NavLink
                        title="home"
                        href="/"
                        label="Link alla pagina home"
                        theme="light"
                        selected={true}
                    />
                </li>
                <li>
                    <NavLink
                        title="arredi"
                        href="/arredi"
                        label="Link alla pagina arredi"
                        theme="light"
                    />
                </li>
                <li>
                    <NavLogo
                        theme="light"
                        href="/"
                        class="h-14"
                    />
                </li>
                <li>
                    <NavLink
                        title="chi siamo"
                        href="/chi-siamo"
                        label="Link alla pagina chi siamo"
                        theme="light"
                    />
                </li>
                <li>
                    <NavLink
                        title="contatti"
                        href="/contatti"
                        label="Link alla pagina contatti"
                        theme="light"
                    />
                </li>
            </ul>
        </nav>
        <NavbarMobile
            id={stickyNavMobileId}
            selectedItem={selectedItem}
        />
    </header>

    <header
        id="fixed-header"
        class="group sticking:pointer-events-none sticking:opacity-0 absolute top-0 left-0 z-30 grid w-full place-items-center p-8 transition-opacity duration-200">
        <NavMobileToggle
            id="fixed-nav-mobile-toggle"
            navMobileId={fixedNavMobileId}
            theme="light"
        />
        <nav>
            <ul
                class="flex flex-row items-center justify-center gap-4 text-sm leading-5 font-medium tracking-widest text-white uppercase">
                <li>
                    <NavLink
                        title="home"
                        href="/"
                        label="Link alla pagina home"
                        theme="dark"
                        selected={true}
                        class="after:bg-white focus-visible:ring-white"
                    />
                </li>
                <li>
                    <NavLink
                        title="arredi"
                        href="/arredi"
                        label="Link alla pagina arredi"
                        theme="dark"
                        class="after:bg-white focus-visible:ring-white"
                    />
                </li>
                <li>
                    <NavLogo
                        theme="dark"
                        href="/"
                    />
                </li>
                <li>
                    <NavLink
                        title="chi siamo"
                        href="/chi-siamo"
                        label="Link alla pagina chi siamo"
                        theme="dark"
                        class="after:bg-white focus-visible:ring-white"
                    />
                </li>
                <li>
                    <NavLink
                        title="contatti"
                        href="/contatti"
                        label="Link alla pagina contatti"
                        theme="dark"
                        class="after:bg-white focus-visible:ring-white"
                    />
                </li>
            </ul>
        </nav>
        <NavbarMobile
            id={fixedNavMobileId}
            selectedItem={selectedItem}
        />
    </header>
</>

<script is:inline>
    const stickyHeader = document.getElementById("sticky-header");
    const stickyMobileToggle = stickyHeader.querySelector("#sticky-nav-mobile-toggle");
    const stickyNavItems = stickyHeader.querySelectorAll(":scope > nav > ul > li > a");

    // by default sticky navbar is non-interactive
    stickyMobileToggle.tabIndex = -1;
    stickyNavItems.forEach((item) => (item.tabIndex = -1));

    const fixedHeader = document.getElementById("fixed-header");
    const fixedMobileToggle = fixedHeader.querySelector("#fixed-nav-mobile-toggle");
    const fixedNavItems = fixedHeader.querySelectorAll(":scope > nav > ul > li > a");

    // hide fixed navbar on scroll and show sticky navbar
    const scrollFunction = () => {
        const isPageScrolled = document.body.scrollTop > 0 || document.documentElement.scrollTop > 0;
        document
            .querySelectorAll("header")
            .forEach((header) => header.classList.toggle("sticking", isPageScrolled));

        if (isPageScrolled) {
            // remove tab focus on mobile button, and list items
            // (including logo), for the fixed header

            if (fixedMobileToggle.dataset.oldTabIndex === undefined) {
                fixedMobileToggle.dataset.oldTabIndex = fixedMobileToggle.tabIndex.toString();
                fixedMobileToggle.tabIndex = -1;
            }

            fixedNavItems.forEach((item) => {
                if (item.dataset.oldTabIndex === undefined) {
                    item.dataset.oldTabIndex = item.tabIndex.toString();
                    item.tabIndex = -1;
                }
            });

            // restore tab focus on mobile button, and list items
            // (including logo), for the sticky header
            stickyMobileToggle.tabIndex = parseInt(stickyMobileToggle.dataset.oldTabIndex ?? "0");
            stickyMobileToggle.removeAttribute("data-old-tab-index");

            stickyNavItems.forEach((item) => {
                item.tabIndex = parseInt(item.dataset.oldTabIndex ?? "0");
                item.removeAttribute("data-old-tab-index");
            });
        } else {
            // restore tab focus on mobile button, and list items
            // (including logo), for the fixed header
            fixedMobileToggle.tabIndex = parseInt(fixedMobileToggle.dataset.oldTabIndex ?? "0");
            fixedMobileToggle.removeAttribute("data-old-tab-index");

            fixedNavItems.forEach((item) => {
                item.tabIndex = parseInt(item.dataset.oldTabIndex ?? "0");
                item.removeAttribute("data-old-tab-index");
            });

            // remove tab focus on mobile button, and list items
            // (including logo), for the sticky header

            if (stickyMobileToggle.dataset.oldTabIndex === undefined) {
                stickyMobileToggle.dataset.oldTabIndex = stickyMobileToggle.tabIndex.toString();
                stickyMobileToggle.tabIndex = -1;
            }

            stickyNavItems.forEach((item) => {
                if (item.dataset.oldTabIndex === undefined) {
                    item.dataset.oldTabIndex = item.tabIndex.toString();
                    item.tabIndex = -1;
                }
            });
        }
    };
    window.onscroll = () => setTimeout(scrollFunction, 100);
</script>
