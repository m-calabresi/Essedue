name: Build and Release

on:
    push:
        tags:
            - "v*.*.*" # Triggers on version tags like v1.0.0, v2.1.3, etc.

permissions:
    contents: write

jobs:
    build-and-release:
        runs-on: ubuntu-latest

        env:
            ARTIFACT_NAME: ${{ vars.SITE_NAME }}-${{ github.ref_name }}.zip

        steps:
            - name: Checkout code
              uses: actions/checkout@v5

            - name: Set package.json Version
              run: |
                  echo "Setting version to ${{ github.ref_name }}"
                  jq --arg v "${{ github.ref_name }}" '.version = $v' package.json > tmp.package.json && mv tmp.package.json package.json

            - name: Commit Updated package.json
              run: |
                  git config user.name "${{ vars.GH_ACTION_USER_NAME }}"
                  git config user.email "${{ vars.GH_ACTION_USER_EMAIL }}"
                  git add package.json

                  if git diff --cached --quiet; then
                    echo "Skipping commit: package.json already at version ${{ github.ref_name }}"
                  else
                    git commit -m "chore(release): set package.json version to ${{ github.ref_name }}"
                    git push origin HEAD:main
                  fi

            - name: Install dependencies
              run: npm ci

            - name: Build Astro site
              run: PUBLIC_SITE=${{ vars.PUBLIC_SITE }} npm run build

            - name: Create build archive
              run: |
                  cd dist
                  zip -r ../${{ env.ARTIFACT_NAME }} .

            - name: Determine Prerelease Flag
              id: prerelease
              run: |
                  if [[ ${{ github.ref_name }} =~ (alpha|beta|rc|next|canary) ]]; then
                    echo "is-prerelease=true" >> $GITHUB_OUTPUT
                  else
                    echo "is-prerelease=false" >> $GITHUB_OUTPUT
                  fi

            - name: Get build date
              id: date
              run: echo "date=$(date -u '+%B %d, %Y')" >> $GITHUB_OUTPUT

            - name: Create GitHub Release
              uses: softprops/action-gh-release@v2
              with:
                  tag_name: ${{ github.ref_name }}
                  name: ${{ github.ref_name }}
                  prerelease: ${{ steps.prerelease.outputs.is-prerelease }}
                  body: |
                      ### ‚ÑπÔ∏è Notes
                      - Built from commit: ${{ github.sha }}
                      - Build date: ${{ steps.date.outputs.date }}

                      ### üìã Changelog
                      - TODO: changelog here

                      ### üì¶ Artifacts
                      - \`${{ env.ARTIFACT_NAME }}\` - Static Astro site files (ZIP format)
